from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report
import pandas as pd
iris = load_iris()
data = pd.DataFrame(data=iris.data, columns=iris.feature_names)
data['species'] = iris.target
data['species_name'] = data['species'].map({0: 'setosa', 1: 'versicolor', 2: 'virginica'})
print("Dataset:")
print(data.head())
X = iris.data  # Features: sepal length, sepal width, petal length, petal width
y = iris.target  # Labels: setosa, versicolor, virginica
# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
# Create and train a Random Forest Classifier
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)
# Make predictions on the test set
y_pred = model.predict(X_test)
# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
print(f"\nModel Accuracy: {accuracy:.2f}\n")
print("Classification Report:")
print(classification_report(y_test, y_pred, target_names=iris.target_names))
# Test with a new sample
sample = [[5.1, 3.5, 1.4, 0.2]] 
# Sample: sepal length, sepal width, petal length, petal width
prediction = model.predict(sample)
predicted_species = iris.target_names[prediction[0]]
print(f"\nNew Sample Prediction: {predicted_species}")
