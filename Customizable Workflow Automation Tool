class Task:
    def __init__(self, name, func, *args, **kwargs):
        self.name = name
        self.func = func
        self.args = args
        self.kwargs = kwargs
    def execute(self):
        print(f"Executing task: {self.name}")
        return self.func(*self.args, **self.kwargs)
class Workflow:
    def __init__(self, name):
        self.name = name
        self.tasks = []
    def add_task(self, task):
        self.tasks.append(task)
    def run(self):
        print(f"Running workflow: {self.name}")
        results = []
        for task in self.tasks:
            result = task.execute()
            results.append(result)
        return results
def task1(data):
    return data.upper()
def task2(data):
    return data[::-1]
def task3(data):
    return f"Processed data: {data}"
workflow = Workflow("Sample Workflow")
workflow.add_task(Task("Uppercase Task", task1, "hello"))
workflow.add_task(Task("Reverse Task", task2, "WORLD"))
workflow.add_task(Task("Format Task", task3, "result"))
results = workflow.run()
print("Workflow results:", results)
